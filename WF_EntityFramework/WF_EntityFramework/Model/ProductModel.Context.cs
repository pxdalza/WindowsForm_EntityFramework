//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WF_EntityFramework.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRUD_ProductoEntities : DbContext
    {
        public CRUD_ProductoEntities()
            : base("name=CRUD_ProductoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int USP_ACTUALIZARPRODUCTO(Nullable<int> productoId, string nombre, string descripcion, Nullable<decimal> precio, Nullable<int> stock)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ACTUALIZARPRODUCTO", productoIdParameter, nombreParameter, descripcionParameter, precioParameter, stockParameter);
        }
    
        public virtual int USP_ELIMINARPRODUCTO(Nullable<int> productoId)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ELIMINARPRODUCTO", productoIdParameter);
        }
    
        public virtual int USP_INSERTARPRODUCTO(string nombre, string descripcion, Nullable<decimal> precio, Nullable<int> stock)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERTARPRODUCTO", nombreParameter, descripcionParameter, precioParameter, stockParameter);
        }
    
        public virtual ObjectResult<USP_LISTARPRODUCTO_Result> USP_LISTARPRODUCTO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LISTARPRODUCTO_Result>("USP_LISTARPRODUCTO");
        }
    
        public virtual ObjectResult<usp_login_Result> usp_login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_login_Result>("usp_login", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<USP_OBTENERPRODUCTO_Result> USP_OBTENERPRODUCTO(Nullable<int> productoId)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OBTENERPRODUCTO_Result>("USP_OBTENERPRODUCTO", productoIdParameter);
        }
    }
}
